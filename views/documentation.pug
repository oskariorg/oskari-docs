extends layout

block main
  div.row
    div.col-md-12
      :markdown-it
          # Documentation
          Oskari is an Open source distributed and extensible geoportal built with Java and Javascript. The goal is to help businesses and municipalities offer better online and mobile map services to their citizens and consumers. Take a look at the [features](/documentation/features) it provides and the [roadmap](https://github.com/oskariorg/oskari-docs/labels/roadmap) for things on their way. A sample application is provided as [download](/download) and live [demo](http://demo.oskari.org). [Read also development basics.](/documentation/development_basics)
  div.row
    div.col-md-4
      :markdown-it
         ### Issue tracking
          Reporting issues for any part of Oskari: [GitHub issues](https://github.com/oskariorg/oskari-docs/issues)
    div.col-md-4
      :markdown-it
         ### Roadmap
          Features that are planned on being added by the community:[GitHub roadmap](https://github.com/oskariorg/oskari-docs/labels/roadmap). Ones without additional "approved" label are still under consideration.

    div.col-md-4
      :markdown-it
         ### Contribute
          The documentation below describes the internal workings of Oskari and
          helps you to extend it to your needs and make meaningful contributions
          for the community!
          * [How to contribute/Getting involved](/documentation/development/how-to-contribute)
          * [Git process](/documentation/development/oskari-git-process)
          * [Development guidelines](/documentation/development/guidelines)

  div.row
    div.col-md-4
      :markdown-it
          ### Sample app
          The sample app can be used as a template for building your own Oskari-based geoportal.
          Select functionalities you want to include and add your own application specific customizations for your needs like initial map layers, users etc.
          The sample app uses Oskari as dependency on npm for frontend and Maven for server.
          This is the app you get from the [download](/download) page.
          * [Sample frontend app](https://github.com/oskariorg/sample-application) built on top of oskari-frontend
          * [Sample server / Java webapp](https://github.com/oskariorg/sample-server-extension) built on top of oskari-server
          * [Sample configurations](https://github.com/oskariorg/sample-configs) for running the Oskari services

    div.col-md-4
      :markdown-it
         ### Source code for Oskari
          * [Oskari frontend](https://github.com/oskariorg/oskari-frontend) Javascript-based code to use on your app
          * [Oskari server](https://github.com/oskariorg/oskari-server) Maven-packaged Java code to use on your app
          * [RPC client library](https://github.com/oskariorg/rpc-client) for controlling embedded maps
          * [Oskari frontend community modules](https://github.com/oskariorg/oskari-frontend-contrib) additional frontend bundles for more functionality
          * [Code and content for this site](https://github.com/oskariorg/oskari-docs)

    div.col-md-4
      :markdown-it
        ### Running an Oskari instance
        * [Architecture](/documentation/architecture_basics)
        * [Setup database](/documentation/backend/setup-database)
        * [Setup Jetty](/documentation/backend/setup-jetty)
        * [Setup Redis](/documentation/backend/setup-redis) (Optional)
        * [Setup development environment](/documentation/backend/setup-development) (Optional)
        * [Setup nginx](/guides/nginx-config) (Optional)
        * [Server clustering](/documentation/features/server/clustering) (Optional)
        * [Updating Oskari version](/documentation/updating)

  di.row
    div.col-md-8
      :markdown-it
        ### Customizing Oskari
        * [Create a custom frontend application](/documentation/setup-frontend-application)
        * [Create a custom Oskari-server extension](/documentation/backend/setup-server-extension)
        * [Modifying app setups](/documentation/features/appsetup)
        * [Customize logo](/documentation/customize/logo)
        * [Customize index map icon](/documentation/customize/indexmap)
        * [Configuring 3D map view](/documentation/features/3D)
        * [Configuring a map projection](/documentation/configuring_map_projection)
        * [Customize properties](/documentation/backend/customize-properties)
        * [Customizing the search functionality](/documentation/features/search)
        * [Additional configuration for map layers](/documentation/features/maplayers)
        * [Enabling thematic maps](/documentation/features/thematicmaps)
        * [Customize demo users](/documentation/features/usermanagement/database-customize-users)
        * [Enabling wfs-t (editing of wfs layer features)](/documentation/backend/installing-wfst)
        * [Enabling the my places module](/documentation/backend/enabling-myplaces)
        * [Enabling the analysis module](/documentation/backend/enabling-analyse)
        * [Enabling the user data store](/documentation/backend/enabling-user-data-store)
        * [User authentication](/documentation/features/usermanagement/authentication)

    div.col-md-4
      div.panel.panel-info
        div.panel-heading
          :markdown-it
           ### Using a hosted Oskari - RPC

            One of the features of Oskari is the ability to embed a map to another website. RPC-functionality allows a developer to control the embedded map and react to events on the map from the embedding website. ([Read more](/documentation/features/rpc))

            * [RPC usage](/examples/rpc-api/)
            * [Request API](/api/requests)
            * [Events API](/api/events)







  div.row
    div.col-md-12
        div.panel.panel-warning
          div.panel-heading
            h4 Frontend

          div.panel-body
            :markdown-it
                The user interface is a [Javascript-based](https://github.com/oskariorg/oskari-frontend) single-page app built by selecting a series of [modules](/api/bundles) that provide features for an application. The modules provide a documented API for interaction and/or easy replacement for a new implementation of a feature. You can mix and match the modules or create new ones to customize the application for your needs.

            div.row
              div.col-md-4
                :markdown-it
                  * [Architecture](/documentation/development/architecture)
                  * [UXGuide for Oskari](/files/Oskari-UXGuide_EN-18-11-2015.pdf)
                  * [Folder structure in code](/documentation/directory-structure)
                  * [Mobile mode](/documentation/core-concepts/mobile-mode)
                  * [Localization](/documentation/development/localization)
                  * [Tools](/documentation/development/tools)
                  * [Supported/used 3rd party Javascript libraries](/documentation/libraries)
                  * [Adding 3rd party Javascript libraries](/documentation/development/adding-libraries)
                  * [Feature: changing mode](/documentation/development/changing-mode) (outdated?)
                  * [Oskari filter](/documentation/examples/oskari-filter)
                  * [Oskari style](/documentation/examples/oskari-style)
                  * [Publisher tools guidelines](/documentation/features/publisher/tools)

              div.col-md-4
                :markdown-it
                  * [Oskari Application](/documentation/core-concepts/oskari-application)
                  * [Oskari Bundle](/documentation/core-concepts/oskari-bundle)
                    * [Oskari bundle manager/loader](/documentation/core-concepts/bundle-manager)
                    * [Bundle docs](/api/bundles)
                    * [Modern bundle](/guides/modern-bundle)
                  * [Oskari class](/documentation/core-concepts/oskari-class)
                  * [Module](/documentation/protocol/module)
                  * [Oskari core and sandbox](/documentation/core-concepts/oskari-core)
                  * [Bundle communication: Request](/documentation/core-concepts/oskari-request)
                    * [List of Oskari requests](/api/requests)
                  * [Bundle communication: Event](/documentation/core-concepts/oskari-event)
                    * [List of Oskari events](/api/events)
                  * [Map module](/documentation/features/map)
                    * [Map module plugin](/documentation/features/map/mapplugin)
                  * [Bundle configuration](/documentation/core-concepts/oskari-bundle-configuration)
                  * [Maplayer definitions](/documentation/data/maplayer-definitions)
                    * [WMS layer data structure](/documentation/data/wms-layer)
                    * [Base/Group layer data structure](/documentation/data/base-layer)
                    * [WFS layer data structure](/documentation/data/wfs-layer)
                    * [ArcGis93 layer data structure](/documentation/data/arcgis93layer)

              div.col-md-4
                :markdown-it
                  #### UI Components

                  All components are currently part of the `divmanazer` bundle.

                  * [Popup](/documentation/components/popup)
                  * [Button](/documentation/components/button)
                  * [Overlay](/documentation/components/overlay)
                  * [Accordion](/documentation/components/accordion)
                  * [Form](/documentation/components/form)
                  * [Grid](/documentation/components/grid)
                  * [Tab container](/documentation/components/tab-container)



  div.row
    div.col-md-12
        div.panel.panel-warning
          div.panel-heading
            h4 Server

          div.panel-body
            :markdown-it
              The [oskari-server](https://github.com/oskariorg/oskari-server) is built with Java and Maven. It provides deployable webapps for managing and launching the user interface for Oskari-based apps. It also provides [endpoints (action routes)](/documentation/backend/actionroutes) for http-requests triggered by the frontend.

            div.row
              div.col-md-4
                :markdown-it
                  * [Architecture](/documentation/backend/architecture_backend)
                  * [Components](/documentation/architecture/components)
                  * [Database structure](/db)
                  * [Folder structure in code (requires updating)](/documentation/backend/overview)
                  * [Configuring dataset import](/documentation/backend/configuring-dataset-import)
              div.col-md-4
                :markdown-it
                  * Action routes
                    * [Adding action routes](/documentation/backend/adding-action-routes)
                    * [Action routes](/documentation/backend/actionroutes)
                  * [Adding bundles based on role](/documentation/backend/adding-bundles)
                  * [Search channels](/documentation/features/search)

              div.col-md-4
                :markdown-it
                  * [Upgrading backend](/documentation/backend/upgrading)
                  * [Writing upgrade scripts](/documentation/backend/upgrade_scripts)
                  * [User management](/documentation/features/usermanagement)
                  * [Layer permissions](/documentation/backend/permissions)
                  * [Adding user guide](/documentation/backend/adding-user-guide)
